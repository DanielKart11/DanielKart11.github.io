const e=JSON.parse('{"key":"v-685b1198","path":"/cs-basics/data-structure/red-black-tree.html","title":"红黑树","lang":"zh-CN","frontmatter":{"title":"红黑树","category":"计算机基础","tag":["数据结构"],"description":"红黑树介绍 红黑树（Red Black Tree）是一种自平衡二叉查找树。它是在 1972 年由 Rudolf Bayer 发明的，当时被称为平衡二叉 B 树（symmetric binary B-trees）。后来，在 1978 年被 Leo J. Guibas 和 Robert Sedgewick 修改为如今的“红黑树”。 由于其自平衡的特性，保证了最坏情形下在 O(logn) 时间复杂度内完成查找、增加、删除等操作，性能表现稳定。 在 JDK 中，TreeMap、TreeSet 以及 JDK1.8 的 HashMap 底层都用到了红黑树。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/cs-basics/data-structure/red-black-tree.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试 + 学习指南)"}],["meta",{"property":"og:title","content":"红黑树"}],["meta",{"property":"og:description","content":"红黑树介绍 红黑树（Red Black Tree）是一种自平衡二叉查找树。它是在 1972 年由 Rudolf Bayer 发明的，当时被称为平衡二叉 B 树（symmetric binary B-trees）。后来，在 1978 年被 Leo J. Guibas 和 Robert Sedgewick 修改为如今的“红黑树”。 由于其自平衡的特性，保证了最坏情形下在 O(logn) 时间复杂度内完成查找、增加、删除等操作，性能表现稳定。 在 JDK 中，TreeMap、TreeSet 以及 JDK1.8 的 HashMap 底层都用到了红黑树。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javaguide.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-07T14:49:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"红黑树"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:modified_time","content":"2023-11-07T14:49:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"红黑树\\",\\"image\\":[\\"https://javaguide.cn/\\"],\\"dateModified\\":\\"2023-11-07T14:49:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"红黑树介绍","slug":"红黑树介绍","link":"#红黑树介绍","children":[]},{"level":2,"title":"为什么需要红黑树？","slug":"为什么需要红黑树","link":"#为什么需要红黑树","children":[]},{"level":2,"title":"红黑树特点","slug":"红黑树特点","link":"#红黑树特点","children":[]},{"level":2,"title":"红黑树数据结构","slug":"红黑树数据结构","link":"#红黑树数据结构","children":[]},{"level":2,"title":"红黑树结构实现","slug":"红黑树结构实现","link":"#红黑树结构实现","children":[{"level":3,"title":"1.左倾染色","slug":"_1-左倾染色","link":"#_1-左倾染色","children":[]},{"level":3,"title":"2.右倾染色","slug":"_2-右倾染色","link":"#_2-右倾染色","children":[]},{"level":3,"title":"3.左旋调衡","slug":"_3-左旋调衡","link":"#_3-左旋调衡","children":[]},{"level":3,"title":"4.右旋调衡","slug":"_4-右旋调衡","link":"#_4-右旋调衡","children":[]}]},{"level":2,"title":"文章推荐","slug":"文章推荐","link":"#文章推荐","children":[]}],"git":{"createdTime":1646270096000,"updatedTime":1699368552000,"contributors":[{"name":"Guide","email":"koushuangbwcx@163.com","commits":3},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":3},{"name":"lyx","email":"3573164589@qq.com","commits":2},{"name":"guide","email":"koushuangbwcx@163.com","commits":1}]},"readingTime":{"minutes":3.65,"words":1094},"filePathRelative":"cs-basics/data-structure/red-black-tree.md","localizedDate":"2022年3月3日","excerpt":"<h2> 红黑树介绍</h2>\\n<p>红黑树（Red Black Tree）是一种自平衡二叉查找树。它是在 1972 年由 Rudolf Bayer 发明的，当时被称为平衡二叉 B 树（symmetric binary B-trees）。后来，在 1978 年被 Leo J. Guibas 和 Robert Sedgewick 修改为如今的“红黑树”。</p>\\n<p>由于其自平衡的特性，保证了最坏情形下在 O(logn) 时间复杂度内完成查找、增加、删除等操作，性能表现稳定。</p>\\n<p>在 JDK 中，<code>TreeMap</code>、<code>TreeSet</code> 以及 JDK1.8 的 <code>HashMap</code> 底层都用到了红黑树。</p>","copyright":{"author":"JavaGuide(javaguide.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
